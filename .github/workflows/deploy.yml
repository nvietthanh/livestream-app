name: Build & Push Docker Images

on:
  push:
    branches:
      - develop
      - staging
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PHP: ghcr.io/${{ github.repository }}/php
  IMAGE_NAME_NGINX: ghcr.io/${{ github.repository }}/nginx

jobs:
  build-image-php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "BUILD_VERSION=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "BUILD_VERSION=staging" >> $GITHUB_ENV
          else
            echo "BUILD_VERSION=production" >> $GITHUB_ENV
          fi

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Pull Existing PHP Image (If Exists)
        run: docker pull ${{ env.IMAGE_NAME_PHP }}:${{ env.BUILD_VERSION }} || true

      - name: Build PHP Image
        run: |
          docker build --pull \
            --cache-from ${{ env.IMAGE_NAME_PHP }}:${{ env.BUILD_VERSION }} \
            --file ./docker/Dockerfile \
            --target app-ci \
            -t ${{ env.IMAGE_NAME_PHP }}:${{ github.sha }} .

      - name: Tag & Push PHP Image
        run: |
          docker tag ${{ env.IMAGE_NAME_PHP }}:${{ github.sha }} ${{ env.IMAGE_NAME_PHP }}:${{ env.BUILD_VERSION }}
          docker push ${{ env.IMAGE_NAME_PHP }}:${{ env.BUILD_VERSION }}

  build-image-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "BUILD_VERSION=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "BUILD_VERSION=staging" >> $GITHUB_ENV
          else
            echo "BUILD_VERSION=production" >> $GITHUB_ENV
          fi

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Pull Existing Nginx Image (If Exists)
        run: docker pull ${{ env.IMAGE_NAME_NGINX }}:${{ env.BUILD_VERSION }} || true

      - name: Build Nginx Image
        run: |
          docker build --pull \
            --cache-from ${{ env.IMAGE_NAME_NGINX }}:${{ env.BUILD_VERSION }} \
            --file ./docker/Dockerfile \
            --target web-ci \
            -t ${{ env.IMAGE_NAME_NGINX }}:${{ github.sha }} .

      - name: Tag & Push Nginx Image
        run: |
          docker tag ${{ env.IMAGE_NAME_NGINX }}:${{ github.sha }} ${{ env.IMAGE_NAME_NGINX }}:${{ env.BUILD_VERSION }}
          docker push ${{ env.IMAGE_NAME_NGINX }}:${{ env.BUILD_VERSION }}

  cleanup:
    runs-on: ubuntu-latest
    needs: [build-image-php, build-image-nginx]
    steps:
      - name: Clean up Docker Cache
        run: docker image prune -af
