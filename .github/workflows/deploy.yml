name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - master
  tags:
    - '*'

jobs:
  get-vendors:
    runs-on: ubuntu-latest
    container: composer
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --ignore-platform-reqs
      - name: Copy .env file
        run: cp .env.example .env
      - name: Upload vendor
        uses: actions/upload-artifact@v4
        with:
          name: vendor
          path: |
            vendor/
            .env

  build-assets:
    runs-on: ubuntu-latest
    container: node:18-alpine
    needs: get-vendors
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download vendor
        uses: actions/download-artifact@v4
        with:
          name: vendor
          path: .
      - name: Setup .env
        run: |
          echo "VITE_APP_NAME=NihonbashiArt" >> .env
          echo "API_TINYMCE_KEY=${{ secrets.API_TINYMCE_KEY }}" >> .env
      - name: Install dependencies
        run: npm install
      - name: Build assets
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: public-build
          path: public/build/

  build-image:
    runs-on: ubuntu-latest
    needs:
      - get-vendors
      - build-assets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set Build Version
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "BUILD_VERSION=latest" >> $GITHUB_ENV;
          else
            echo "BUILD_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV;
          fi
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Build & Push PHP Image
        run: |
          docker pull ghcr.io/${{ github.repository }}/php:${{ env.BUILD_VERSION }} || true
          docker build --pull --cache-from ghcr.io/${{ github.repository }}/php:${{ env.BUILD_VERSION }} --file ./docker/Dockerfile --target app-ci -t ghcr.io/${{ github.repository }}/php:${{ github.sha }} .
          docker tag ghcr.io/${{ github.repository }}/php:${{ github.sha }} ghcr.io/${{ github.repository }}/php:${{ env.BUILD_VERSION }}
          docker push ghcr.io/${{ github.repository }}/php:${{ env.BUILD_VERSION }}
      - name: Build & Push Nginx Image
        run: |
          docker pull ghcr.io/${{ github.repository }}/nginx:${{ env.BUILD_VERSION }} || true
          docker build --pull --cache-from ghcr.io/${{ github.repository }}/nginx:${{ env.BUILD_VERSION }} --file ./docker/Dockerfile --target web-ci -t ghcr.io/${{ github.repository }}/nginx:${{ github.sha }} .
          docker tag ghcr.io/${{ github.repository }}/nginx:${{ github.sha }} ghcr.io/${{ github.repository }}/nginx:${{ env.BUILD_VERSION }}
          docker push ghcr.io/${{ github.repository }}/nginx:${{ env.BUILD_VERSION }}